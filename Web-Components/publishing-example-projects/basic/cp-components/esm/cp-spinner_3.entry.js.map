{"file":"cp-spinner.cp-stock-finder.cp-stock-price.entry.js","mappings":"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","names":[],"sources":["./src/components/cp-spinner/cp-spinner.css?tag=cp-spinner&encapsulation=shadow","./src/components/cp-spinner/cp-spinner.tsx","./src/global/global.ts","./src/components/stock-finder/stock-finder.css?tag=cp-stock-finder&encapsulation=shadow","./src/components/stock-finder/stock-finder.tsx","./src/components/stock-price/stock-price.css?tag=cp-stock-price&encapsulation=shadow","./src/components/stock-price/stock-price.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n\n/* ============================ spinner =========================== */\n.lds-ellipsis {\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 40px;\n}\n.lds-ellipsis div {\n  position: absolute;\n  top: 20px;\n  width: 13px;\n  height: 13px;\n  border-radius: 50%;\n  background: #3b013b;\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\n}\n.lds-ellipsis div:nth-child(1) {\n  left: 8px;\n  animation: lds-ellipsis1 0.6s infinite;\n}\n.lds-ellipsis div:nth-child(2) {\n  left: 8px;\n  animation: lds-ellipsis2 0.6s infinite;\n}\n.lds-ellipsis div:nth-child(3) {\n  left: 32px;\n  animation: lds-ellipsis2 0.6s infinite;\n}\n.lds-ellipsis div:nth-child(4) {\n  left: 56px;\n  animation: lds-ellipsis3 0.6s infinite;\n}\n@keyframes lds-ellipsis1 {\n  0% {\n    transform: scale(0);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes lds-ellipsis3 {\n  0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(0);\n  }\n}\n@keyframes lds-ellipsis2 {\n  0% {\n    transform: translate(0, 0);\n  }\n  100% {\n    transform: translate(24px, 0);\n  }\n}\n","import { Component, Host, h } from '@stencil/core';\n\n@Component({\n  tag: 'cp-spinner',\n  styleUrl: 'cp-spinner.css',\n  shadow: true,\n})\nexport class CpSpinner {\n  render() {\n    return (\n      <Host>\n        <div class=\"lds-ellipsis\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </Host>\n    );\n  }\n}\n","export const AV_API_KEY = 'FMKPL2P1JCFI986S';",":host {\n  display: block;\n  font-family: sans-serif;\n  margin: 2rem;\n  border: 2px solid var(--color-primary, black);\n  padding: 1rem;\n  width: max-content;\n}\n.form-container {\n  display: flex;\n}\n.form-container #stock-symbol:focus,\n.form-container .search-button:focus {\n  outline: none;\n}\n.form-container #stock-symbol{\n  font: inherit;\n  color: var(--color-primary, black);\n  margin-right: 1rem;\n  padding: 0.1rem 0.25rem;\n}\n.form-container .search-button {\n  font: inherit;\n  padding: 0.25rem 0.5rem;\n  border: 1px solid var(--color-primary, black);\n  background: var(--color-primary, black);\n  color: white;\n  cursor: pointer;\n}\n.form-container .search-button:hover,\n.form-container .search-button:active {\n  background: #750175;\n}\n.form-container .search-button:disabled{\n  background: #ccc;\n  border: #ccc;\n  color: grey;\n  cursor: not-allowed;\n}\n\nul {\n  margin: 15px 0 0 0;\n  padding: 0;\n  list-style: none;\n}\nli {\n  margin: 0.25rem 0;\n  padding: 0.25rem;\n  border: 1px solid #ccc;\n  cursor: pointer;\n}\n\nli:hover {\n  background: var(--color-primary, black);\n  color: white;\n}","import { Component, Host, h, State, Event, EventEmitter } from '@stencil/core';\n\nimport { AV_API_KEY } from '../../global/global';\n\n@Component({\n  tag: 'cp-stock-finder',\n  styleUrl: 'stock-finder.css',\n  shadow: true,\n})\nexport class StockFinder {\n  stockNameInput: HTMLInputElement;\n\n  @Event({ bubbles: true, composed: true }) symbolEmitter: EventEmitter<string>;\n\n  @State() searchResults: { symbol: string; name: string }[] = [];\n  // @State() searchResults = [{name:'Puru', symbol: 'PS'}, {name:'Shweta', symbol: 'PS'}];\n\n  @State() loading = false;\n\n  onFindStocks(event: Event) {\n    event.preventDefault();\n    this.loading = true;\n    const stockName = this.stockNameInput.value;\n    fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${stockName}&apikey=${AV_API_KEY}`)\n      .then(res => res.json())\n      .then(parsedRes => {\n        this.searchResults = parsedRes['bestMatches'].map(match => {\n          return { symbol: match['1. symbol'], name: match['2. name'] };\n        });\n        this.loading = false;\n      })\n      .catch(err => {\n        console.error(err);\n        this.loading = false;\n      });\n  }\n\n  onSelectSymbol(symbol: string) {\n    this.symbolEmitter.emit(symbol);\n  }\n\n  render() {\n    return (\n      <Host>\n        <form class=\"form-container\" onSubmit={this.onFindStocks.bind(this)}>\n          <input id=\"stock-symbol\" ref={el => (this.stockNameInput = el)} />\n          <button type=\"submit\" class=\"search-button\">\n            Find!\n          </button>\n        </form>\n        {this.loading ? (\n          <cp-spinner></cp-spinner>\n        ) : (\n          <ul>\n            {this.searchResults.map(result => (\n              <li onClick={this.onSelectSymbol.bind(this, result.symbol)}>\n                <strong>{result.symbol}</strong> - {result.name}\n              </li>\n            ))}\n          </ul>\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  font-family: sans-serif;\n  margin: 2rem;\n  border: 2px solid var(--color-primary, black);\n  padding: 1rem;\n  width: max-content;\n}\n:host(.error) {\n  border-color: rgb(249, 86, 4);\n}\n.form-container {\n  display: flex;\n}\n.form-container #stock-symbol:focus,\n.form-container .search-button:focus {\n  outline: none;\n}\n.form-container #stock-symbol{\n  font: inherit;\n  color: var(--color-primary, black);\n  margin-right: 1rem;\n  padding: 0.1rem 0.25rem;\n}\n.form-container .search-button {\n  font: inherit;\n  padding: 0.25rem 0.5rem;\n  border: 1px solid var(--color-primary, black);\n  background: var(--color-primary, black);\n  color: white;\n  cursor: pointer;\n}\n.form-container .search-button:hover,\n.form-container .search-button:active {\n  background: var(--color-primary, black);\n}\n.form-container .search-button:disabled{\n  background: #ccc;\n  border: #ccc;\n  color: grey;\n  cursor: not-allowed;\n}","import { Component, Host, h, State, Prop, Watch, Listen } from '@stencil/core';\n\nimport { AV_API_KEY } from '../../global/global';\n\n@Component({\n  tag: 'cp-stock-price',\n  styleUrl: 'stock-price.css',\n  shadow: true,\n})\nexport class StockPrice {\n  //Referencing an element\n  stockInput: HTMLInputElement;\n\n  // @Element() el: HTMLElement; //To access host element\n\n  @State() validStockInput = false;\n  @State() fetchedPrice: number;\n  @State() error: string;\n  @State() loading = false;\n\n  @Prop({ mutable: true, reflect: true }) stockUserInput: string;\n\n  //All lifecycles\n  componentWillLoad() {\n    //will run right before component is about to load.\n    console.log('componentWillLoad');\n  }\n\n  componentDidLoad() {\n    console.log('componentDidLoad');\n    if (this.stockUserInput) {\n      this.validStockInput = true;\n      this.fetchStockPrice(this.stockUserInput);\n    }\n  }\n\n  componentWillUpdate() {\n    //runs right before rerendering the component after any property change\n    console.log('componentWillUpdate');\n  }\n  componentDidUpdate() {\n    //runs after component rerendered\n    console.log('componentDidUpdate');\n    //handled by watchToChanges\n    // if(this.stockSymbol !== this.stockUserInput) {  //used to run when prop is updated from outside\n    //   this.stockUserInput = this.stockSymbol;\n    //   this.fetchStockPrice(this.stockSymbol);\n    // }\n  }\n\n  //listening to event emitted by other components\n  @Listen('symbolEmitter', { target: 'body' })\n  onStockSymbolSelected(event: CustomEvent) {\n    if (event.detail && event.detail !== this.stockUserInput) {\n      this.stockUserInput = event.detail;\n      // this.fetchStockPrice(event.detail);\n    }\n  }\n\n  //keep watching on this attribute\n  @Watch('stockUserInput')\n  stockSymbolChanged(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.stockUserInput = newValue;\n      this.validStockInput = true;\n      this.fetchStockPrice(newValue);\n    }\n  }\n\n  disconnectedCallback() {\n    // after component is unloaded from the DOM\n    console.log('disconnectedCallback');\n  }\n\n  // //hostData returns some metaData about the component.\n  // hostData() {\n  //   return {class: this.error ? 'error' : ''}; //this will add error class in tag of the component\n  // } // <Host> should not be used for this\n\n  private onUserInput(event: Event) {\n    this.stockUserInput = (event.target as HTMLInputElement).value;\n    this.validStockInput = this.stockUserInput.trim() !== '' ? true : false; //can be used for check brfore fetching from API\n  }\n\n  private onFetchStockPrice(event: Event) {\n    event.preventDefault();\n    //accessing value of input\n    // console.log(this.el.shadowRoot.querySelector('#stock-symbol'));\n    // const stockSymbol = (this.el.shadowRoot.querySelector('#stock-symbol') as HTMLInputElement).value;\n\n    //refrenced element\n    // console.log(this.stockInput);\n    // const stockSymbol = this.stockInput.value;\n    // fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=${AV_API_KEY}`)\n    this.fetchStockPrice(this.stockUserInput);\n  }\n\n  private fetchStockPrice(stockUserInput: string) {\n    this.loading = true;\n    this.error = null;\n    this.fetchedPrice = undefined;\n    fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockUserInput}&apikey=${AV_API_KEY}`)\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Invalid');\n        }\n        return res.json();\n      })\n      .then(parsedRes => {\n        if (!parsedRes['Global Quote'] || !parsedRes['Global Quote']['05. price']) {\n          throw new Error('Invalid symbol!');\n        }\n        this.error = null;\n        this.fetchedPrice = +parsedRes['Global Quote']['05. price'];\n        this.loading = false;\n      })\n      .catch(err => {\n        this.error = err.message;\n        this.fetchedPrice = null;\n        this.loading = false;\n      });\n  }\n  render() {\n    return (\n      <Host class={this.error ? 'error' : ''}>\n        <form class=\"form-container\" onSubmit={this.onFetchStockPrice.bind(this)}>\n          <input id=\"stock-symbol\" ref={el => (this.stockInput = el)} value={this.stockUserInput} onInput={this.onUserInput.bind(this)} /> {/* Referencing the element */}\n          {/* Setting up two way binding for stockUserInput variable */}\n          {/* updating stockUserInput variable on every key stroke */}\n          <button type=\"submit\" class=\"search-button\" disabled={!this.validStockInput || this.loading}>\n            Fetch\n          </button>\n        </form>\n        <div>\n          {this.loading ? (\n            <cp-spinner></cp-spinner>\n          ) : (\n            <span>{this.error ? <p>{this.error}</p> : <p>Price: {this.fetchedPrice && '$' + this.fetchedPrice}</p>}</span>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}